name: Release

env:
  CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

on:
  push:
    tags:

jobs:
  rust-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Clone
      - uses: actions-rs/toolchain@v1
        name: Setup Rust
        with:
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        name: Cargo Build
        with:
          command: build
          args: --verbose --features std
      - name: Cache Cargo Registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ubuntu-latest-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
      - uses: actions-rs/cargo@v1
        name: Cargo Test
        with:
          command: test
          args: --verbose --features std
  wasmpack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Clone
      - uses: actions/setup-node@v1
        with:
          node-version: 18.x
      - uses: actions-rs/toolchain@v1
        name: Setup Rust
        with:
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        name: Install WasmPack
        with:
          command: install
          args: wasm-pack
      - uses: borales/actions-yarn@v3.0.0
        with:
          cmd: install
      - name: Build Wasm
        run: ./build.sh
      - uses: borales/actions-yarn@v3.0.0
        with:
          cmd: run test
      - name: Cache Cargo Registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ubuntu-latest-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
      - uses: actions/upload-artifact@v2
        with:
          name: pkg
          path: |
            pkg.bundler/
            pkg.dist/
            pkg.node/
            pkg.web/
            package.json
            index.browser.js
            LICENCE
            README.md
  js-test:
    runs-on: ubuntu-latest
    needs:
      - wasmpack
      - rust-test
    strategy:
      matrix:
        node-version: [ 10.x, 12.x, v14.18.3, 14.x, 16.x, 18.x, '*' ]
    steps:
      - uses: actions/checkout@v2
        name: Clone
      - uses: actions/download-artifact@master
        with:
          name: pkg
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: borales/actions-yarn@v3.0.0
        with:
          cmd: install
      - uses: borales/actions-yarn@v3.0.0
        with:
          cmd: run test
  cratesio:
    runs-on: ubuntu-latest
    needs:
      - wasmpack
      - rust-test
      - js-test
    steps:
      - uses: actions/checkout@v2
        name: Clone
      - uses: actions/download-artifact@master
        with:
          name: pkg
      - uses: actions-rs/toolchain@v1
        name: Setup Rust
        with:
          toolchain: nightly
          override: true
      - name: Cache Cargo Registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ubuntu-latest-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
      - name: Publish package to Crates.IO
        run: cargo publish --token ${CRATES_TOKEN}
  npm:
    runs-on: ubuntu-latest
    needs:
      - wasmpack
      - rust-test
      - js-test
    steps:
      - uses: actions/checkout@v2
        name: Clone
      - uses: actions/download-artifact@master
        with:
          name: pkg
      - uses: actions/setup-node@v1
        with:
          node-version: 18.x
      - uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: package.json
  github:
    runs-on: ubuntu-latest
    needs:
      - wasmpack
      - rust-test
      - js-test
    steps:
      - uses: actions/checkout@v2
        name: Clone
      - uses: actions/download-artifact@master
        with:
          name: pkg
      - name: Pack Artifacts
        run: |
          zip -r qukit.zip pkg.node/ pkg.bundler/ pkg.web/ pkg.dist/ index.browser.js package.json README.md LICENCE
          tar -cvzf qukit.tar.gz pkg.node/ pkg.bundler/ pkg.web/ pkg.dist/ index.browser.js package.json README.md LICENCE
      - name: Extract Tag Last
        id: prerelease
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            return context.payload.ref.replace(/\/refs\/tags\//, '').includes("pre");
      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ steps.prerelease.outputs.result }}
          files: |
            qukit.zip
            qukit.tar.gz
            LICENSE
            README.md
